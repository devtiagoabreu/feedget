#step by step 

#web
#stage 1 and stage 2
npm create vite@latest 
react |  react ts
cd web
npm install
npm install -D tailwindcss
npx tailwindcss init -p
npm install -D tailwindcss postcss autoprefixer
npm install phosphor-react
npm install @headlessui/react
npm install -D @tailwindcss/forms
npm install --save-dev tailwind-scrollbar
npm install html2canvas

#server
#stage 3
mkdir server
cd server
npm init -y
npm i typescript @types/node ts-node-dev -D
npx tsc --init
fazer alterações no tsconfig ( "target": "es2020", "rootDir": "./src", "outDir": "./dist",)
npx tsc
npm run dev
npm i express
npm i -D @types/express
npm i prisma -D 
npm i @prisma/client
npx prisma init 
instale a extensão do prisma no vscode
npx prisma migrate dev 
criar o nome da migrate
npx prisma studio #para iniciar o prisma studio e verificar o banco de dados
npm install nodemailer
npm install @types/nodemailer -D

# SOLID

1. Single Responsibility Principle
2. Open/Closed Principle
3. Liskov Substitution Principle
4. Interface Segregation Principle
5. Dependency Inversion Principle

1. Cada classe tem uma responsabilidade única;
2. As classes da aplicação devem ser abertas para extensão mas fechadas para modificação;
3. Nós devemos poder substituir uma classe pai por uma herança dela e tudo continuar funcionando;
4. Cada classe deve ter suas interfaces segregadas;
5. As classes não devem depender de serviços externos; 